// 2018-10 Yves Bonnefont

#include <Wire.h>

#define DB_address 0x8
#define Compass_address 0x60

struct roverType {
	long x;
	long y;
	int vx;
	int vy;
	byte bearing;
	int teta_point;
}

struct segmentType {
	int FL_ticksCum;
	int FR_ticksCum;
	int RL_ticksCum;
	int RR_ticksCum;
	int millisCum;

    int FL_ticksStep;
	int FR_ticksStep;
	int RL_ticksStep;
	int RR_ticksStep;
	int millisStep;
	
	int last_bearing;
    int current_bearing;
}

segmentType trajectory[];

int I2C_buffer[5];
roverType rover;
segmentType segment;

void setup() {
   Wire.begin();        // join i2c bus (address optional for master)
   Serial.begin(9600);  // start serial for output
}

bool readDecoders() {
   byte retries=0;
   unsigned long now;
   
   while (retries<4) { //checks 5 bytes were received 3 retries max
      now=millis();
      Wire.requestFrom(DB_address, 5);    // request 5 bytes from slave device DB_board
      while (Wire.available()<5 && millis()-now < 100); // need slave to send no less than requested
      if (Wire.available()== 5) {
         segment.FL_ticksStep=((int) Wire.read())-127;
         segment.FR_ticksStep=((int) Wire.read())-127;
         segment.RL_ticksStep=((int) Wire.read())-127;
         segment.RR_ticksStep=((int) Wire.read())-127;
         segment.millisStep=buffer_I2C[4];
         return true;
      }
      retries++;
   }
   return false;
}

void deliverSegment() {
	
	segment.FL_ticksCum+=segment.FL_ticksStep;
	segment.FR_ticksCum+=segment.FR_ticksStep;
	segment.RL_ticksCum+=segment.RL_ticksStep;
	segment.RR_ticksCum+=segment.RR_ticksStep;
	segment.millisCum+=segment.millisStep;
   }



void readCompass()
{

  Wire.beginTransmission(CMPS12_ADDRESS);  //starts communication with CMPS12
  Wire.write(ANGLE_8);                    //Sends the register we wish to start reading from
  Wire.endTransmission();
 
  // Request 5 bytes from the CMPS12
  // this will give us the 8 bit bearing, 
  // both bytes of the 16 bit bearing, pitch and roll
  Wire.requestFrom(CMPS12_ADDRESS, 5);       
  
        // Wait for all bytes to come back
  
  angle8 = Wire.read();               // Read back the 5 bytes
  high_byte = Wire.read();
  low_byte = Wire.read();
  pitch = Wire.read();
  roll = Wire.read();
  
  angle16 = high_byte;                 // Calculate 16 bit angle
  angle16 <<= 8;
  angle16 += low_byte;
}


void loop() {
}
